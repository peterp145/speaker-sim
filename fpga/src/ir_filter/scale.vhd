-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\fpga_fir_test\scale.vhd
-- Created: 2022-05-05 16:28:54
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: scale
-- Source Path: fpga_fir_test/ir_filter/scale
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY scale IS
  PORT( i_clk_dsp_122M88                  :   IN    std_logic;
        en                                :   IN    std_logic;
        u                                 :   IN    signed(35 DOWNTO 0);  -- sfix36_En30
        w_data_out_valid                  :   IN    std_logic;
        w_data_out_valid1                 :   OUT   signed(23 DOWNTO 0);  -- sfix24_En23
        w_data_out_valid2                 :   OUT   std_logic
        );
END scale;


ARCHITECTURE rtl OF scale IS

  -- Signals
  SIGNAL Bit_Shift_out1                   : signed(35 DOWNTO 0);  -- sfix36_En30
  SIGNAL Data_Type_Conversion4_out1       : signed(23 DOWNTO 0);  -- sfix24_En23
  SIGNAL w_data_out_valid_1               : signed(23 DOWNTO 0) := (OTHERS => '0');  -- sfix24_En23
  SIGNAL Gain_out1                        : signed(47 DOWNTO 0);  -- sfix48_En46
  SIGNAL w_data_out_valid_2               : signed(47 DOWNTO 0) := (OTHERS => '0');  -- sfix48_En46
  SIGNAL Data_Type_Conversion2_out1       : signed(23 DOWNTO 0);  -- sfix24_En23
  SIGNAL w_data_out_valid_3               : signed(23 DOWNTO 0) := (OTHERS => '0');  -- sfix24_En23
  SIGNAL w_data_out_valid_4               : std_logic;
  SIGNAL w_data_out_valid_5               : std_logic;
  SIGNAL Delay6_reg                       : std_logic_vector(0 TO 2) := (OTHERS => '0');  -- ufix1 [3]
  SIGNAL w_data_out_valid_6               : std_logic;

BEGIN
  Bit_Shift_out1 <= SHIFT_RIGHT(u, 3);

  
  Data_Type_Conversion4_out1 <= X"7FFFFF" WHEN ((Bit_Shift_out1(35) = '0') AND (Bit_Shift_out1(34 DOWNTO 30) /= "00000")) OR ((Bit_Shift_out1(35) = '0') AND (Bit_Shift_out1(30 DOWNTO 7) = X"7FFFFF")) ELSE
      X"800000" WHEN (Bit_Shift_out1(35) = '1') AND (Bit_Shift_out1(34 DOWNTO 30) /= "11111") ELSE
      Bit_Shift_out1(30 DOWNTO 7) + ('0' & (Bit_Shift_out1(6) AND (Bit_Shift_out1(7) OR (Bit_Shift_out1(5) OR Bit_Shift_out1(4) OR Bit_Shift_out1(3) OR Bit_Shift_out1(2) OR Bit_Shift_out1(1) OR Bit_Shift_out1(0)))));

  Delay4_process : PROCESS (i_clk_dsp_122M88)
  BEGIN
    IF i_clk_dsp_122M88'EVENT AND i_clk_dsp_122M88 = '1' THEN
      IF en = '1' THEN
        w_data_out_valid_1 <= Data_Type_Conversion4_out1;
      END IF;
    END IF;
  END PROCESS Delay4_process;


  Gain_out1 <= to_signed(16#67D700#, 24) * w_data_out_valid_1;

  Delay3_process : PROCESS (i_clk_dsp_122M88)
  BEGIN
    IF i_clk_dsp_122M88'EVENT AND i_clk_dsp_122M88 = '1' THEN
      IF en = '1' THEN
        w_data_out_valid_2 <= Gain_out1;
      END IF;
    END IF;
  END PROCESS Delay3_process;


  
  Data_Type_Conversion2_out1 <= X"7FFFFF" WHEN ((w_data_out_valid_2(47) = '0') AND (w_data_out_valid_2(46) /= '0')) OR ((w_data_out_valid_2(47) = '0') AND (w_data_out_valid_2(46 DOWNTO 23) = X"7FFFFF")) ELSE
      X"800000" WHEN (w_data_out_valid_2(47) = '1') AND (w_data_out_valid_2(46) /= '1') ELSE
      w_data_out_valid_2(46 DOWNTO 23) + ('0' & (w_data_out_valid_2(22) AND (w_data_out_valid_2(23) OR (w_data_out_valid_2(21) OR w_data_out_valid_2(20) OR w_data_out_valid_2(19) OR w_data_out_valid_2(18) OR w_data_out_valid_2(17) OR w_data_out_valid_2(16) OR w_data_out_valid_2(15) OR w_data_out_valid_2(14) OR w_data_out_valid_2(13) OR w_data_out_valid_2(12) OR w_data_out_valid_2(11) OR w_data_out_valid_2(10) OR w_data_out_valid_2(9) OR w_data_out_valid_2(8) OR w_data_out_valid_2(7) OR w_data_out_valid_2(6) OR w_data_out_valid_2(5) OR w_data_out_valid_2(4) OR w_data_out_valid_2(3) OR w_data_out_valid_2(2) OR w_data_out_valid_2(1) OR w_data_out_valid_2(0)))));

  Delay2_process : PROCESS (i_clk_dsp_122M88)
  BEGIN
    IF i_clk_dsp_122M88'EVENT AND i_clk_dsp_122M88 = '1' THEN
      IF en = '1' THEN
        w_data_out_valid_3 <= Data_Type_Conversion2_out1;
      END IF;
    END IF;
  END PROCESS Delay2_process;


  w_data_out_valid_4 <= w_data_out_valid;

  w_data_out_valid_5 <= w_data_out_valid_4;

  Delay6_process : PROCESS (i_clk_dsp_122M88)
  BEGIN
    IF i_clk_dsp_122M88'EVENT AND i_clk_dsp_122M88 = '1' THEN
      IF en = '1' THEN
        Delay6_reg(0) <= w_data_out_valid_5;
        Delay6_reg(1 TO 2) <= Delay6_reg(0 TO 1);
      END IF;
    END IF;
  END PROCESS Delay6_process;

  w_data_out_valid_6 <= Delay6_reg(2);

  w_data_out_valid1 <= w_data_out_valid_3;

  w_data_out_valid2 <= w_data_out_valid_6;

END rtl;

